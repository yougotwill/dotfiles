# Place a copy of this config to ~/.aerospace.toml
# After that, you can edit ~/.aerospace.toml to your liking

# Author: yougotwill
# Mimic the Amethyst window manager's behaviour with my custom keybindings
# Try to keep the default config file structure as best as possible to prevent conflicts
# See: https://nikitabobko.github.io/AeroSpace/guide#default-config

# You can use it to add commands that run after login to macOS user session.
# 'start-at-login' needs to be 'true' for 'after-login-command' to work
# Available commands: https://nikitabobko.github.io/AeroSpace/commands
after-login-command = []

# You can use it to add commands that run after AeroSpace startup.
# 'after-startup-command' is run after 'after-login-command'
# Available commands : https://nikitabobko.github.io/AeroSpace/commands
after-startup-command = [
    # JankyBorders has a built-in detection of already running process,
    # so it won't be run twice on AeroSpace restart
    'exec-and-forget $HOME/.config/aerospace/scripts/highlight-active-windows.sh'
]

# Start AeroSpace at login
start-at-login = true

# Normalizations. See: https://nikitabobko.github.io/AeroSpace/guide#normalization
enable-normalization-flatten-containers = true
enable-normalization-opposite-orientation-for-nested-containers = true

# See: https://nikitabobko.github.io/AeroSpace/guide#layouts
# The 'accordion-padding' specifies the size of accordion padding
# You can set 0 to disable the padding feature
accordion-padding = 0

# Possible values: tiles|accordion
default-root-container-layout = 'accordion'

# Possible values: horizontal|vertical|auto
# 'auto' means: wide monitor (anything wider than high) gets horizontal orientation,
#               tall monitor (anything higher than wide) gets vertical orientation
default-root-container-orientation = 'auto'

# Mouse follows focus when focused monitor changes
# Drop it from your config, if you don't like this behavior
# See https://nikitabobko.github.io/AeroSpace/guide#on-focus-changed-callbacks
# See https://nikitabobko.github.io/AeroSpace/commands#move-mouse
# Fallback value (if you omit the key): on-focused-monitor-changed = []
on-focused-monitor-changed = ['move-mouse monitor-lazy-center']

# Custom event changes
# See: https://nikitabobko.github.io/AeroSpace/guide#exec-on-workspace-change-callback
# Float Picture in Picture windows on top
# https://github.com/nikitabobko/AeroSpace/issues/2
exec-on-workspace-change = ['/bin/sh', '-c', '$HOME/.config/aerospace/scripts/float-pip-windows.sh']
# Custom event changes - end

# You can effectively turn off macOS "Hide application" (cmd-h) feature by toggling this flag
# Useful if you don't use this macOS feature, but accidentally hit cmd-h or cmd-alt-h key
# Also see: https://nikitabobko.github.io/AeroSpace/goodies#disable-hide-app
automatically-unhide-macos-hidden-apps = true

# Possible values: (qwerty|dvorak)
# See https://nikitabobko.github.io/AeroSpace/guide#key-mapping
[key-mapping]
preset = 'qwerty'

# Gaps between windows (inner-*) and between monitor edges (outer-*).
# Possible values:
# - Constant:     gaps.outer.top = 8
# - Per monitor:  gaps.outer.top = [{ monitor.main = 16 }, { monitor."some-pattern" = 32 }, 24]
#                 In this example, 24 is a default value when there is no match.
#                 Monitor pattern is the same as for 'workspace-to-monitor-force-assignment'.
#                 See: https://nikitabobko.github.io/AeroSpace/guide#assign-workspaces-to-monitors
[gaps]
inner.horizontal = 10
inner.vertical =   10
outer.left =       10
outer.bottom =     10
outer.top =        10
outer.right =      10

# 'main' binding mode declaration
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
# 'main' binding mode must be always presented
# Fallback value (if you omit the key): mode.main.binding = {}
[mode.main.binding]

# All possible keys:
# - Letters.        a, b, c, ..., z
# - Numbers.        0, 1, 2, ..., 9
# - Keypad numbers. keypad0, keypad1, keypad2, ..., keypad9
# - F-keys.         f1, f2, ..., f20
# - Special keys.   minus, equal, period, comma, slash, backslash, quote, semicolon, backtick,
#                   leftSquareBracket, rightSquareBracket, space, enter, esc, backspace, tab
# - Keypad special. keypadClear, keypadDecimalMark, keypadDivide, keypadEnter, keypadEqual,
#                   keypadMinus, keypadMultiply, keypadPlus
# - Arrows.         left, down, up, right

# All possible modifiers: cmd, alt, ctrl, shift

# All possible commands: https://nikitabobko.github.io/AeroSpace/commands

# See: https://nikitabobko.github.io/AeroSpace/commands#exec-and-forget
# You can uncomment the following lines to open up terminal with alt + enter shortcut (like in i3)
# alt-enter = '''exec-and-forget osascript -e '
# tell application "Terminal"
#     do script
#     activate
# end tell'
# '''

# Custom execution commands
ctrl-alt-shift-period = ['exec-and-forget $HOME/.config/aerospace/scripts/hotkey-windows.sh net.kovidgoyal.kitty kitty']

# Restart AeroSpace
# ctrl-alt-shift-a = ['''exec-and-forget osascript -e \
# 'tell application "AeroSpace" to quit
# delay 2
# tell application "AeroSpace" to activate'
# ''']
# Custom execution commands - end

# See: https://nikitabobko.github.io/AeroSpace/commands#layout
alt-shift-s = ['layout tiling', 'layout tiles horizontal vertical']
alt-shift-d = ['layout tiling','layout accordion horizontal vertical']
alt-shift-f = ['layout floating tiling']

# See: https://nikitabobko.github.io/AeroSpace/commands#focus
alt-shift-h = ['focus left']
alt-shift-j = ['focus down']
alt-shift-k = ['focus up']
alt-shift-l = ['focus right']

# See: https://nikitabobko.github.io/AeroSpace/commands#move
ctrl-alt-shift-h = ['move left']
ctrl-alt-shift-j = ['move down']
ctrl-alt-shift-k = ['move up']
ctrl-alt-shift-l = ['move right']

# See: https://nikitabobko.github.io/AeroSpace/commands#resize
alt-shift-minus = ['resize smart -50']
alt-shift-equal = ['resize smart +50']

# See: https://nikitabobko.github.io/AeroSpace/commands#workspace
ctrl-1 = ['workspace 1']
ctrl-2 = ['workspace 2']
ctrl-3 = ['workspace 3']
ctrl-4 = ['workspace 4']
ctrl-5 = ['workspace 5']
ctrl-6 = ['workspace 6']
ctrl-7 = ['workspace 7'] # In your config, you can drop workspace bindings that you don't need
ctrl-left = ['workspace prev']
ctrl-right = ['workspace next']

# See: https://nikitabobko.github.io/AeroSpace/commands#focus-monitor
cmd-ctrl-left = ['focus-monitor prev']
cmd-ctrl-right = ['focus-monitor next']

# See: https://nikitabobko.github.io/AeroSpace/commands#move-node-to-workspace
ctrl-alt-shift-1 = ['move-node-to-workspace 1', 'workspace 1']
ctrl-alt-shift-2 = ['move-node-to-workspace 2', 'workspace 2']
ctrl-alt-shift-3 = ['move-node-to-workspace 3', 'workspace 3']
ctrl-alt-shift-4 = ['move-node-to-workspace 4', 'workspace 4']
ctrl-alt-shift-5 = ['move-node-to-workspace 5', 'workspace 5']
ctrl-alt-shift-6 = ['move-node-to-workspace 6', 'workspace 6']
ctrl-alt-shift-7 = ['move-node-to-workspace 7', 'workspace 7']
ctrl-alt-shift-left = ['move-node-to-workspace prev', 'workspace prev']
ctrl-alt-shift-right = ['move-node-to-workspace next', 'workspace next']

# See: https://nikitabobko.github.io/AeroSpace/commands#workspace-back-and-forth
alt-tab = ['workspace-back-and-forth']
alt-shift-space = ['workspace-back-and-forth', 'workspace-back-and-forth'] # reset window focus

# See: https://nikitabobko.github.io/AeroSpace/commands#move-workspace-to-monitor
alt-shift-tab = ['move-workspace-to-monitor --wrap-around next']

# Custom bindings
# See: https://nikitabobko.github.io/AeroSpace/goodies#disable-hide-app
cmd-h = [] # Disable "hide application"
cmd-alt-h = [] # Disable "hide others"

# See: https://nikitabobko.github.io/AeroSpace/commands#flatten-workspace-tree
alt-shift-z = ['flatten-workspace-tree'] # reset layout

# See: https://nikitabobko.github.io/AeroSpace/commands#fullscreen
alt-shift-a = ['fullscreen']

# See: https://nikitabobko.github.io/AeroSpace/commands#move-node-to-monitor
cmd-ctrl-alt-left = ['move-node-to-monitor --wrap-around prev', 'focus-monitor prev']
cmd-ctrl-alt-right = ['move-node-to-monitor --wrap-around next', 'focus-monitor next' ]

ctrl-alt-shift-minus = ['resize smart -500']
ctrl-alt-shift-equal = ['resize smart +500']
# Custom bindings - end

# See: https://nikitabobko.github.io/AeroSpace/commands#mode
ctrl-alt-shift-comma = ['mode service']

# 'service' binding mode declaration.
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
[mode.service.binding]
esc = ['reload-config', 'mode main']
r = ['flatten-workspace-tree', 'mode main'] # reset layout
f = ['layout floating tiling', 'mode main'] # Toggle between floating and tiling layout
backspace = ['close-all-windows-but-current', 'mode main']
space = ['enable toggle', 'mode main']
c = ['exec-and-forget open ~/.config/aerospace/aerospace.toml', 'mode main']

# sticky is not yet supported https://github.com/nikitabobko/AeroSpace/issues/2
#s = ['layout sticky tiling', 'mode main']

# See: https://nikitabobko.github.io/AeroSpace/commands#join-with
alt-shift-h = ['join-with left', 'mode main']
alt-shift-j = ['join-with down', 'mode main']
alt-shift-k = ['join-with up', 'mode main']
alt-shift-l = ['join-with right', 'mode main']

# See: https://nikitabobko.github.io/AeroSpace/commands#volume
# down = 'volume down'
# up = 'volume up'
# shift-down = ['volume set 0', 'mode main']

# Custom behaviours
# Floating windows
# See: https://nikitabobko.github.io/AeroSpace/guide#on-window-detected-callback
[[on-window-detected]]
if.app-id = 'net.kovidgoyal.kitty'
if.window-title-regex-substring = ''
run = ['layout floating']
check-further-callbacks = true

[[on-window-detected]]
if.app-id = 'org.mozilla.firefox'
if.window-title-regex-substring = 'Picture-in-Picture'
run = ['layout floating']
check-further-callbacks = true

[[on-window-detected]]
if.app-id = 'org.mozilla.firefoxdeveloperedition'
if.window-title-regex-substring = 'Picture-in-Picture'
run = ['layout floating']
check-further-callbacks = true

[[on-window-detected]]
if.app-id = 'com.google.Chrome'
if.window-title-regex-substring = 'Picture-in-picture'
run = ['layout floating']
check-further-callbacks = true

[[on-window-detected]]
if.app-id = 'com.brave.Browser'
if.window-title-regex-substring = 'Picture-in-picture'
run = ['layout floating']
check-further-callbacks = true

[[on-window-detected]]
if.app-id = 'org.mozilla.firefox'
if.window-title-regex-substring = 'Extension:'
run = ['layout floating']
check-further-callbacks = true

[[on-window-detected]]
if.app-id = 'org.mozilla.firefoxdeveloperedition'
if.window-title-regex-substring = 'Extension:'
run = ['layout floating']
check-further-callbacks = true

[[on-window-detected]]
if.app-id = 'com.toggl.daneel'
if.window-title-regex-substring = 'Untitled'
run = ['layout floating']
check-further-callbacks = true

[[on-window-detected]]
if.app-id = 'com.sindresorhus.Camera-Preview'
if.window-title-regex-substring = 'Camera Preview'
run = ['layout floating']
check-further-callbacks = true

[[on-window-detected]]
if.app-id = 'com.sindresorhus.Scratchpad'
if.window-title-regex-substring = ''
run = ['layout floating']
check-further-callbacks = true

[[on-window-detected]]
if.app-id = 'me.justinyan.justfocus'
if.window-title-regex-substring = ''
run = ['layout floating']
check-further-callbacks = true

[[on-window-detected]]
if.app-id = 'com.hegenberg.BetterTouchTool'
if.window-title-regex-substring = 'Buy BetterTouchTool'
run = ['layout floating']
check-further-callbacks = true

[[on-window-detected]]
if.app-id = 'com.hegenberg.BetterTouchTool'
if.window-title-regex-substring = 'Software Update'
run = ['layout floating']
check-further-callbacks = true

[[on-window-detected]]
if.app-id = 'com.hegenberg.BetterTouchTool'
if.window-title-regex-substring = 'Screenshot'
run = ['layout floating']
check-further-callbacks = true

[[on-window-detected]]
if.app-id = 'net.whatsapp.WhatsApp'
if.window-title-regex-substring = 'Whatsapp video call'
run = ['layout floating']
check-further-callbacks = true

[[on-window-detected]]
if.app-id = 'com.apple.PhotoBooth'
if.window-title-regex-substring = ''
run = ['layout floating']
check-further-callbacks = true

[[on-window-detected]]
if.app-id = 'com.valvesoftware.steam'
if.window-title-regex-substring = 'Friends List'
run = ['layout floating']
check-further-callbacks = true

[[on-window-detected]]
if.app-id = 'com.valvesoftware.steam'
if.window-title-regex-substring = 'Special Offers'
run = ['layout floating']
check-further-callbacks = true

[[on-window-detected]]
if.app-id = 'com.github.Electron'
run = ['layout floating']
check-further-callbacks = true

## Whisky apps
[[on-window-detected]]
if.app-id = 'NULL-APP-BUNDLE-ID'
if.window-title-regex-substring = 'Friends List'
run = ['layout floating']
check-further-callbacks = true

[[on-window-detected]]
if.app-id = 'NULL-APP-BUNDLE-ID'
if.window-title-regex-substring = 'Special Offers'
run = ['layout floating']
check-further-callbacks = true

[[on-window-detected]]
if.app-id = 'com.wulkano.kap'
if.window-title-regex-substring = ''
run = ['layout floating']
check-further-callbacks = true

# Move applications to specific workspaces
[[on-window-detected]]
if.app-id = 'org.mozilla.firefox'
run = ['move-node-to-workspace 1']
check-further-callbacks = true

[[on-window-detected]]
if.app-id = 'org.mozilla.firefoxdeveloperedition'
run = ['move-node-to-workspace 1']
check-further-callbacks = true

[[on-window-detected]]
if.app-id = 'com.microsoft.VSCode'
run = ['move-node-to-workspace 2']
check-further-callbacks = true

[[on-window-detected]]
if.app-id = 'org.mozilla.thunderbird'
run = ['move-node-to-workspace 2']
check-further-callbacks = true

[[on-window-detected]]
if.app-id = 'com.apple.mail'
run = ['move-node-to-workspace 2']
check-further-callbacks = true

[[on-window-detected]]
if.app-id = 'com.apple.reminders'
run = ['move-node-to-workspace 3']
check-further-callbacks = true

[[on-window-detected]]
if.app-id = 'com.github.Electron'
run = ['move-node-to-workspace 3']
check-further-callbacks = true

[[on-window-detected]]
if.app-id = 'com.apple.iCal'
run = ['move-node-to-workspace 3']
check-further-callbacks = true

[[on-window-detected]]
if.app-id = 'com.apple.Notes'
run = ['move-node-to-workspace 4']
check-further-callbacks = true

[[on-window-detected]]
if.app-id = 'com.figma.Desktop'
run = ['move-node-to-workspace 4']
check-further-callbacks = true

[[on-window-detected]]
if.app-id = 'com.electron.logseq'
run = ['move-node-to-workspace 5']
check-further-callbacks = true

[[on-window-detected]]
if.app-id = 'com.hnc.Discord'
run = ['move-node-to-workspace 6']
check-further-callbacks = true

[[on-window-detected]]
if.app-id = 'net.whatsapp.WhatsApp'
run = ['move-node-to-workspace 6']
check-further-callbacks = true

[[on-window-detected]]
if.app-id = 'com.loki-project.messenger-desktop'
run = ['move-node-to-workspace 6']
check-further-callbacks = true

[[on-window-detected]]
if.app-id = 'com.tencent.xinWeChat'
run = ['move-node-to-workspace 6']
check-further-callbacks = true

[[on-window-detected]]
if.app-id = 'org.whispersystems.signal-desktop'
run = ['move-node-to-workspace 6']
check-further-callbacks = true

[[on-window-detected]]
if.app-id = 'dev.vencord.vesktop'
run = ['move-node-to-workspace 6']
check-further-callbacks = true

[[on-window-detected]]
if.app-id = 'com.microsoft.teams2'
run = ['move-node-to-workspace 6']
check-further-callbacks = true

[[on-window-detected]]
if.app-id = 'com.spotify.client'
run = ['move-node-to-workspace 7']
check-further-callbacks = true

[[on-window-detected]]
if.app-id = 'com.colliderli.iina'
run = ['move-node-to-workspace 7']
check-further-callbacks = true

[[on-window-detected]]
if.app-id = 'com.smartcodeltd.stremio'
run = ['move-node-to-workspace 7']
check-further-callbacks = true

[[on-window-detected]]
if.app-id = 'com.utmapp.UTM'
run = ['move-node-to-workspace 7']
check-further-callbacks = true

[[on-window-detected]]
if.app-id = 'com.isaacmarovitz.Whisky'
run = ['move-node-to-workspace 7']
check-further-callbacks = true

[[on-window-detected]]
if.app-name-regex-substring = 'Audiobookshelf'
run = ['move-node-to-workspace 7']
check-further-callbacks = true

[[on-window-detected]]
if.app-name-regex-substring = 'Ambiphone'
run = ['move-node-to-workspace 7']
check-further-callbacks = true
# Custom behaviour - end