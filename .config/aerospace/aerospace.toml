# yougotwill aerospace config
# Mimics the behaviour of Amethyst with my own keybindings
# Place a copy of this config to ~/.aerospace.toml
# After that, you can edit ~/.aerospace.toml to your liking

# It's not necessary to copy all keys to your config.
# If the key is missing in your config, "default-config.toml" will serve as a fallback

# You can use it to add commands that run after login to macOS user session.
# 'start-at-login' needs to be 'true' for 'after-login-command' to work
# Available commands: https://nikitabobko.github.io/AeroSpace/commands
after-login-command = []

# You can use it to add commands that run after AeroSpace startup.
# 'after-startup-command' is run after 'after-login-command'
# Available commands : https://nikitabobko.github.io/AeroSpace/commands
after-startup-command = ['exec-and-forget borders active_color=0xff69D9F9 inactive_color=0x00494d64 width=7.0 blur_radius=8']

# Start AeroSpace at login
start-at-login = true

# Normalizations. See: https://nikitabobko.github.io/AeroSpace/guide#normalization
enable-normalization-flatten-containers = true
enable-normalization-opposite-orientation-for-nested-containers = true

# See: https://nikitabobko.github.io/AeroSpace/guide#layouts
# The 'accordion-padding' specifies the size of accordion padding
# You can set 0 to disable the padding feature
accordion-padding = 0

# Possible values: tiles|accordion
default-root-container-layout = 'tiles'

# Possible values: horizontal|vertical|auto
# 'auto' means: wide monitor (anything wider than high) gets horizontal orientation,
#               tall monitor (anything higher than wide) gets vertical orientation
default-root-container-orientation = 'auto'

# Possible values: (qwerty|dvorak)
# See https://nikitabobko.github.io/AeroSpace/guide#key-mapping
key-mapping.preset = 'qwerty'

# Mouse follows focus when focused monitor changes
# Drop it from your config, if you don't like this behavior
# See https://nikitabobko.github.io/AeroSpace/guide#on-focus-changed-callbacks
# See https://nikitabobko.github.io/AeroSpace/commands#move-mouse
on-focused-monitor-changed = ['move-mouse monitor-lazy-center']

# Gaps between windows (inner-*) and between monitor edges (outer-*).
# Possible values:
# - Constant:     gaps.outer.top = 8
# - Per monitor:  gaps.outer.top = [{ monitor.main = 16 }, { monitor."some-pattern" = 32 }, 24]
#                 In this example, 24 is a default value when there is no match.
#                 Monitor pattern is the same as for 'workspace-to-monitor-force-assignment'.
#                 See: https://nikitabobko.github.io/AeroSpace/guide#assign-workspaces-to-monitors
[gaps]
inner.horizontal = 10
inner.vertical =   10
outer.left =       10
outer.bottom =     10
outer.top =        10
outer.right =      10

# 'main' binding mode declaration
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
# 'main' binding mode must be always presented
[mode.main.binding]

# All possible keys:
# - Letters.        a, b, c, ..., z
# - Numbers.        0, 1, 2, ..., 9
# - Keypad numbers. keypad0, keypad1, keypad2, ..., keypad9
# - F-keys.         f1, f2, ..., f20
# - Special keys.   minus, equal, period, comma, slash, backslash, quote, semicolon, backtick,
#                   leftSquareBracket, rightSquareBracket, space, enter, esc, backspace, tab
# - Keypad special. keypadClear, keypadDecimalMark, keypadDivide, keypadEnter, keypadEqual,
#                   keypadMinus, keypadMultiply, keypadPlus
# - Arrows.         left, down, up, right

# All possible modifiers: cmd, alt, ctrl, shift

# All possible commands: https://nikitabobko.github.io/AeroSpace/commands

# See: https://nikitabobko.github.io/AeroSpace/commands#exec-and-forget
# You can uncomment the following lines to open up terminal with alt + enter shortcut (like in i3)
# alt-enter = '''exec-and-forget osascript -e '
# tell application "Terminal"
#     do script
#     activate
# end tell'
# '''

# Terminal window quake style
ctrl-alt-shift-t = '''exec-and-forget osascript -e \
'set kittyAppName to "kitty"
tell application "System Events"
	if exists (window 1 of process kittyAppName) then
		tell process kittyAppName
			if value of attribute "AXMinimized" of window 1 is true then
				set value of attribute "AXMinimized" of window 1 to false
				set frontmost to true
			else
				set value of attribute "AXMinimized" of window 1 to true
			end if
		end tell
	else
		tell application "kitty" to activate
	end if
end tell'
'''

# Restart AeroSpace
ctrl-alt-shift-a = '''exec-and-forget osascript -e \
'tell application "AeroSpace" to quit
delay 2
tell application "AeroSpace" to activate'
'''

# See: https://nikitabobko.github.io/AeroSpace/commands#layout
alt-shift-s = 'layout tiles horizontal vertical'
alt-shift-a = 'layout accordion horizontal vertical'

# See: https://nikitabobko.github.io/AeroSpace/commands#join-with
alt-shift-d = ['join-with right', 'join-with down']

# See: https://nikitabobko.github.io/AeroSpace/commands#focus
alt-shift-h = ['focus left', 'focus up']
alt-shift-j = ['focus down', 'focus right']
alt-shift-k = ['focus up', 'focus left']
alt-shift-l = ['focus right', 'focus down']

# See: https://nikitabobko.github.io/AeroSpace/commands#move
ctrl-alt-shift-h = 'move left'
ctrl-alt-shift-j = 'move down'
ctrl-alt-shift-k = 'move up'
ctrl-alt-shift-l = 'move right'

# See: https://nikitabobko.github.io/AeroSpace/commands#resize
alt-shift-minus = 'resize smart -50'
alt-shift-equal = 'resize smart +50'

# See: https://nikitabobko.github.io/AeroSpace/commands#workspace
ctrl-left = 'workspace prev'
ctrl-right = 'workspace next'
ctrl-1 = 'workspace 1'
ctrl-2 = 'workspace 2'
ctrl-3 = 'workspace 3'
ctrl-4 = 'workspace 4'
ctrl-5 = 'workspace 5'
ctrl-6 = 'workspace 6'
ctrl-7 = 'workspace 7'
ctrl-8 = 'workspace 8'
ctrl-9 = 'workspace 9' # In your config, you can drop workspace bindings that you don't need

# See: https://nikitabobko.github.io/AeroSpace/commands#focus-monitor
cmd-ctrl-left = 'focus-monitor prev'
cmd-ctrl-right = 'focus-monitor next'

# See: https://nikitabobko.github.io/AeroSpace/commands#move-node-to-workspace
ctrl-alt-shift-left = ['move-node-to-workspace prev', 'workspace prev']
ctrl-alt-shift-right = ['move-node-to-workspace next', 'workspace next']
ctrl-alt-shift-1 = ['move-node-to-workspace 1', 'workspace 1']
ctrl-alt-shift-2 = ['move-node-to-workspace 2', 'workspace 2']
ctrl-alt-shift-3 = ['move-node-to-workspace 3', 'workspace 3']
ctrl-alt-shift-4 = ['move-node-to-workspace 4', 'workspace 4']
ctrl-alt-shift-5 = ['move-node-to-workspace 5', 'workspace 5']
ctrl-alt-shift-6 = ['move-node-to-workspace 6', 'workspace 6']
ctrl-alt-shift-7 = ['move-node-to-workspace 7', 'workspace 7']
ctrl-alt-shift-8 = ['move-node-to-workspace 8', 'workspace 8']
ctrl-alt-shift-9 = ['move-node-to-workspace 9', 'workspace 9']

# See: https://nikitabobko.github.io/AeroSpace/commands#move-node-to-monitor
cmd-ctrl-alt-left = ['move-node-to-monitor --wrap-around prev', 'focus-monitor prev']
cmd-ctrl-alt-right = ['move-node-to-monitor --wrap-around next', 'focus-monitor next' ]

# See: https://nikitabobko.github.io/AeroSpace/commands#workspace-back-and-forth
alt-tab = 'workspace-back-and-forth'
alt-shift-space = ['focus-back-and-forth', 'workspace-back-and-forth']

# See: https://nikitabobko.github.io/AeroSpace/commands#move-workspace-to-monitor
alt-shift-tab = 'move-workspace-to-monitor --wrap-around next'

# See: https://nikitabobko.github.io/AeroSpace/commands#close
ctrl-alt-shift-w = ['close --quit-if-last-window', 'focus-back-and-forth', 'workspace-back-and-forth'] # Close window and focus previous

# Miscellaneous 
alt-shift-w = 'flatten-workspace-tree' # Reset layout
alt-shift-f = ['layout floating tiling', 'mode float']
cmd-h = 'macos-native-minimize' # Replace Hide with Minimize (to only hide the focused window and not the whole app)
cmd-alt-h = [] # Disable "Hide others"

# See: https://nikitabobko.github.io/AeroSpace/commands#mode
ctrl-alt-shift-comma = 'mode service'

# 'service' binding mode declaration.
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
[mode.float.binding]
alt-shift-f = ['layout tiling floating', 'mode main']

[mode.service.binding]
esc = 'mode main'
space = ['reload-config', 'mode main']
r = ['flatten-workspace-tree', 'mode main'] # reset layout
#s = ['layout sticky tiling', 'mode main'] # sticky is not yet supported https://github.com/nikitabobko/AeroSpace/issues/2
f = ['layout floating tiling', 'mode main'] # Toggle between floating and tiling layout
backspace = ['close-all-windows-but-current', 'mode main']
d = ['enable toggle', 'mode main']
c = ['exec-and-forget open ~/.config/aerospace/aerospace.toml', 'mode main']

ctrl-alt-shift-h = ['join-with left', 'mode main']
ctrl-alt-shift-j = ['join-with down', 'mode main']
ctrl-alt-shift-k = ['join-with up', 'mode main']
ctrl-alt-shift-l = ['join-with right', 'mode main']

# See: https://nikitabobko.github.io/AeroSpace/guide#on-window-detected-callback
# Terminal window quake style
#[[on-window-detected]]
#if.app-id = 'net.kovidgoyal.kitty'
#run = 'layout floating'
#check-further-callbacks = true

# Floating windows
[[on-window-detected]]
if.app-id = 'org.mozilla.firefox'
if.window-title-regex-substring = 'Picture-in-Picture'
run = 'layout floating'
check-further-callbacks = true

[[on-window-detected]]
if.app-id = 'org.mozilla.firefoxdeveloperedition'
if.window-title-regex-substring = 'Picture-in-Picture'
run = 'layout floating'
check-further-callbacks = true

[[on-window-detected]]
if.app-id = 'com.toggl.daneel'
if.window-title-regex-substring = 'Toggl Track'
run = 'layout floating'
check-further-callbacks = true

[[on-window-detected]]
if.app-id = 'com.sindresorhus.Camera-Preview'
if.window-title-regex-substring = 'Camera Preview'
run = 'layout floating'
check-further-callbacks = true

[[on-window-detected]]
if.app-id = 'com.hegenberg.BetterTouchTool'
if.window-title-regex-substring = 'Buy BetterTouchTool'
run = 'layout floating'
check-further-callbacks = true

[[on-window-detected]]
if.app-id = 'com.sindresorhus.Scratchpad'
if.window-title-regex-substring = ''
run = 'layout floating'
check-further-callbacks = true

[[on-window-detected]]
if.app-id = 'net.whatsapp.WhatsApp'
if.window-title-regex-substring = 'Whatsapp video call'
run = 'layout floating'
check-further-callbacks = true

# Open applications on specific workspaces
[[on-window-detected]]
if.app-id = 'org.mozilla.firefox'
run = 'move-node-to-workspace 1'
check-further-callbacks = true

[[on-window-detected]]
if.app-id = 'org.mozilla.firefoxdeveloperedition'
run = 'move-node-to-workspace 1'
check-further-callbacks = true

[[on-window-detected]]
if.app-id = 'com.microsoft.VSCode'
run = 'move-node-to-workspace 2'
check-further-callbacks = true

[[on-window-detected]]
if.app-id = 'org.mozilla.thunderbird'
run = 'move-node-to-workspace 2'
check-further-callbacks = true

[[on-window-detected]]
if.app-id = 'com.github.Electron'
run = 'move-node-to-workspace 3'
check-further-callbacks = true

[[on-window-detected]]
if.app-id = 'com.apple.reminders'
run = 'move-node-to-workspace 3'
check-further-callbacks = true

[[on-window-detected]]
if.app-id = 'com.apple.iCal'
run = 'move-node-to-workspace 3'
check-further-callbacks = true

[[on-window-detected]]
if.app-id = 'com.figma.Desktop'
run = 'move-node-to-workspace 4'
check-further-callbacks = true

[[on-window-detected]]
if.app-id = 'com.electron.logseq'
run = 'move-node-to-workspace 5'
check-further-callbacks = true

[[on-window-detected]]
if.app-id = 'com.hnc.Discord'
run = 'move-node-to-workspace 6'
check-further-callbacks = true

[[on-window-detected]]
if.app-id = 'net.whatsapp.WhatsApp'
run = 'move-node-to-workspace 6'
check-further-callbacks = true

[[on-window-detected]]
if.app-id = 'com.loki-project.messenger-desktop'
run = 'move-node-to-workspace 6'
check-further-callbacks = true

[[on-window-detected]]
if.app-id = 'com.tencent.xinWeChat'
run = 'move-node-to-workspace 6'
check-further-callbacks = true

[[on-window-detected]]
if.app-id = 'org.whispersystems.signal-desktop'
run = 'move-node-to-workspace 6'
check-further-callbacks = true

[[on-window-detected]]
if.app-id = 'com.spotify.client'
run = 'move-node-to-workspace 7'
check-further-callbacks = true

[[on-window-detected]]
if.app-id = 'com.colliderli.iina'
run = 'move-node-to-workspace 7'
check-further-callbacks = true

[[on-window-detected]]
if.app-id = 'com.smartcodeltd.stremio'
run = 'move-node-to-workspace 7'
check-further-callbacks = true
